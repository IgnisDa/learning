# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type CarPicture {
  id: Int!
  car: Car!
  url: String!
}

type Car {
  id: Int!
  carPictures: [CarPicture!]!
  name: String!
  year: Float!
  model: String
}

"""Details about the user object"""
type UserDto {
  """The primary key of the user"""
  id: String!

  """The name of the user"""
  username: String!

  """The email of the user"""
  email: String!
}

type LoginResult {
  user: UserDto!
  token: String!
}

type Query {
  car(id: Int!): Car!
  cars: [Car!]!
  login(LoginUserInput: LoginUserInput!): LoginResult!
  refreshToken: String!
}

input LoginUserInput {
  username: String!
  password: String!
}

type Mutation {
  deleteAllCars: Boolean!
  createCar(carInput: CarInput!): Car!
  addCarPicture(carPictureInput: CarPictureInput!, id: Int!): Boolean!
  createUser(userCreateInput: CreateUserInput!): CreateUserResultUnion!
}

input CarInput {
  name: String!
  year: Int!
  model: String!
}

input CarPictureInput {
  url: String!
}

"""Result type returned as the result when new user is created"""
union CreateUserResultUnion = CreateUserError | UserDto

"""Type returned for the errors when a new user is created"""
type CreateUserError {
  """The error associated with username"""
  usernameError: String

  """The error associated with email"""
  emailError: String

  """The error associated with password"""
  passwordError: String
}

"""Type to use while creating a new user"""
input CreateUserInput {
  """The username of the new user"""
  username: String!

  """The email of the new user"""
  email: String!

  """The password of the new user"""
  password: String!
}
